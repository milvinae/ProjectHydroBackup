<?php

/**
 * @file
 * Contains hydro_raindrop.module.
 */

use Drupal\Core\Entity\EntityTypeInterface;
use Drupal\Core\Field\BaseFieldDefinition;
use \Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Session\AccountInterface;
use Drupal\Core\Url;

/**
 * Implements hook_help().
 */
function hydro_raindrop_help($route_name, RouteMatchInterface $route_match) {

  switch ($route_name) {
    // Main module help for the hydro_raindrop module.
    case 'help.page.hydro_raindrop':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Provides Hydro Raindrop Multi Factor Authentication integration.') . '</p>';
      return $output;

    default:
  }

}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function hydro_raindrop_form_user_login_form_alter(&$form, FormStateInterface $form_state) {
  $form['#submit'][] = 'hydro_raindrop_user_login_submit';
}

/**
 * Implements hook_user_login_submit().
 */
function hydro_raindrop_user_login_submit(&$form, FormStateInterface $form_state) {
  $route_name = \Drupal::routeMatch()->getRouteName();

  if ($route_name != 'user.reset.login') {
    // Check if a destination was set, probably on an exception controller.
    // @see \Drupal\user\Form\UserLoginForm::submitForm()
    $request = \Drupal::service('request_stack')->getCurrentRequest();
    if (!$request->request->has('destination')) {
      $form_state->setRedirect('hydro_raindrop.auth');
    }
    else {
      $request->query->set('destination', $request->request->get('destination'));
    }
  }

}
